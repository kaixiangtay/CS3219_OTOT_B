{"ast":null,"code":"import _toConsumableArray from \"/Users/tkx/Desktop/CS3219_OTOT_B/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/tkx/Desktop/CS3219_OTOT_B/frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/tkx/Desktop/CS3219_OTOT_B/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/tkx/Desktop/CS3219_OTOT_B/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tkx/Desktop/CS3219_OTOT_B/frontend/src/Homepage/Home.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport FoodModal from '../components/Modals/FoodModal';\nimport FoodTable from '../components/Tables/FoodTable';\n\nfunction Home() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      foodList = _useState2[0],\n      setFoodList = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      dbError = _useState4[0],\n      setDbError = _useState4[1];\n\n  var getfoodList = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var tempFoodList, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              tempFoodList = []; // try {\n              //     fetch('http://localhost:8080/api/food', {\n              //         method: 'GET'\n              //     })\n              //         .then(response => response.json())\n              //         .then(foodList => {\n              //             for (var i = 0; i < foodList.data.length; i++) {\n              //                 tempFoodList.push({\n              //                     id: foodList.data[i]._id,\n              //                     foodname: foodList.data[i].foodname,\n              //                     expirydate: foodList.data[i].expirydate,\n              //                     person: foodList.data[i].person,\n              //                     phone: foodList.data[i].phone\n              //                 })\n              //             }\n              //             setFoodList(tempFoodList)\n              //         })\n              // } catch (error) {\n              //     setDbError(true)\n              //     console.log(error)\n              //   }\n\n              _context.prev = 1;\n              response = fetch(\"http://localhost:8080/api/food\", {\n                method: 'GET'\n              });\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              tempFoodList = _context.sent;\n              setFoodList(tempFoodList);\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 9]]);\n    }));\n\n    return function getfoodList() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var addFood = function addFood(item) {\n    setFoodList([].concat(_toConsumableArray(foodList), [item]));\n  };\n\n  var updateFood = function updateFood(item) {\n    var tempFoodList = [];\n    tempFoodList = foodList.map(function (curr) {\n      return curr.id === item.id ? item : curr;\n    });\n    setFoodList(tempFoodList);\n  };\n\n  var deleteFood = function deleteFood(id) {\n    var tempFoodList = [];\n    tempFoodList = foodList.filter(function (item) {\n      return item.id !== id;\n    });\n    setFoodList(tempFoodList);\n  };\n\n  var tableView = /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FoodTable, {\n    foodList: foodList,\n    updateFood: updateFood,\n    deleteFood: deleteFood,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FoodModal, {\n    buttonLabel: \"Add Food\",\n    addFood: addFood,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }))));\n  useEffect(function () {\n    getfoodList();\n  }, [foodList]);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    style: {\n      marginTop: \"2%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, \"CRUD Food Tracker\"))), dbError ? console.log(\"Hello World\") : \"\", dbError ? /*#__PURE__*/React.createElement(\"h2\", {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 24\n    }\n  }, \"Database connection error\") : tableView);\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/tkx/Desktop/CS3219_OTOT_B/frontend/src/Homepage/Home.js"],"names":["React","useState","useEffect","Container","Row","Col","FoodModal","FoodTable","Home","foodList","setFoodList","dbError","setDbError","getfoodList","tempFoodList","response","fetch","method","json","console","log","addFood","item","updateFood","map","curr","id","deleteFood","filter","tableView","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Container, Row, Col } from 'reactstrap'\nimport FoodModal from '../components/Modals/FoodModal'\nimport FoodTable from '../components/Tables/FoodTable'\n\nfunction Home() {\n\n    const [foodList, setFoodList] = useState([])\n    const [dbError, setDbError] = useState(false)\n\n    const getfoodList = async () => {\n        var tempFoodList = []\n\n        // try {\n        //     fetch('http://localhost:8080/api/food', {\n        //         method: 'GET'\n        //     })\n        //         .then(response => response.json())\n        //         .then(foodList => {\n        //             for (var i = 0; i < foodList.data.length; i++) {\n        //                 tempFoodList.push({\n        //                     id: foodList.data[i]._id,\n        //                     foodname: foodList.data[i].foodname,\n        //                     expirydate: foodList.data[i].expirydate,\n        //                     person: foodList.data[i].person,\n        //                     phone: foodList.data[i].phone\n        //                 })\n        //             }\n        //             setFoodList(tempFoodList)\n        //         })\n        // } catch (error) {\n        //     setDbError(true)\n        //     console.log(error)\n            \n        //   }\n\n        try {\n            const response = fetch(`http://localhost:8080/api/food`, {\n              method: 'GET',\n            })\n            \n            tempFoodList = await response.json()\n            \n            setFoodList(tempFoodList)\n            \n          } catch (error) {\n            console.log(error)\n          }\n    }\n\n    const addFood = (item) => {\n        setFoodList([...foodList, item])\n    }\n\n    const updateFood = (item) => {\n        var tempFoodList = []\n        tempFoodList = foodList.map(curr => curr.id === item.id ? item : curr)\n        setFoodList(tempFoodList);\n    }\n\n    const deleteFood = (id) => {\n        var tempFoodList = []\n        tempFoodList = foodList.filter(item => item.id !== id)\n        setFoodList(tempFoodList)\n    }\n\n    const tableView  =\n        <div>\n            <Row>\n                <Col>\n                    <FoodTable foodList={foodList} updateFood={updateFood} deleteFood={deleteFood} />\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <FoodModal buttonLabel=\"Add Food\" addFood={addFood} />\n                </Col>\n            </Row>\n        </div>        \n\n    useEffect(() => {\n        getfoodList()\n    }, [foodList]);\n\n    return (\n        <Container>\n            <Row style={{ marginTop: \"2%\" }}>\n                <Col>\n                    <h2 align=\"center\">CRUD Food Tracker</h2>\n                </Col>\n            </Row>\n            {dbError ? console.log(\"Hello World\") : \"\"}\n            {dbError ? <h2 align=\"center\">Database connection error</h2>:tableView}\n        </Container>\n    )\n}\n\nexport default Home"]},"metadata":{},"sourceType":"module"}