{"ast":null,"code":"import _defineProperty from \"/Users/tkx/Desktop/backup2/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/tkx/Desktop/backup2/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/tkx/Desktop/backup2/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tkx/Desktop/backup2/frontend/src/Components/Forms/FormAddEdit.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\n\nfunction AddEditForm(props) {\n  var _useState = useState({\n    id: 0,\n    first: '',\n    last: '',\n    email: '',\n    phone: '',\n    location: '',\n    hobby: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      form = _useState2[0],\n      setValues = _useState2[1];\n\n  var onChange = function onChange(e) {\n    setValues(_objectSpread({}, form, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  var submitFormAdd = function submitFormAdd(e) {\n    e.preventDefault();\n    fetch('http://localhost:3000/crud', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        first: form.first,\n        last: form.last,\n        email: form.email,\n        phone: form.phone,\n        location: form.location,\n        hobby: form.hobby\n      })\n    }).then(function (response) {\n      return response.json();\n    }).then(function (item) {\n      if (Array.isArray(item)) {\n        props.addItemToState(item[0]);\n        props.toggle();\n      } else {\n        console.log('failure');\n      }\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n\n  var submitFormEdit = function submitFormEdit(e) {\n    e.preventDefault();\n    fetch('http://localhost:3000/crud', {\n      method: 'put',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id: form.id,\n        first: form.first,\n        last: form.last,\n        email: form.email,\n        phone: form.phone,\n        location: form.location,\n        hobby: form.hobby\n      })\n    }).then(function (response) {\n      return response.json();\n    }).then(function (item) {\n      if (Array.isArray(item)) {\n        // console.log(item[0])\n        props.updateState(item[0]);\n        props.toggle();\n      } else {\n        console.log('failure');\n      }\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n\n  useEffect(function () {\n    if (props.item) {\n      var _props$item = props.item,\n          id = _props$item.id,\n          first = _props$item.first,\n          last = _props$item.last,\n          email = _props$item.email,\n          phone = _props$item.phone,\n          location = _props$item.location,\n          hobby = _props$item.hobby;\n      setValues({\n        id: id,\n        first: first,\n        last: last,\n        email: email,\n        phone: phone,\n        location: location,\n        hobby: hobby\n      });\n    }\n  }, false);\n  return React.createElement(Form, {\n    onSubmit: props.item ? submitFormEdit : submitFormAdd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"first\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"First Name\"), React.createElement(Input, {\n    type: \"text\",\n    name: \"first\",\n    id: \"first\",\n    onChange: onChange,\n    value: form.first === null ? '' : form.first,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  })), React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"last\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"Last Name\"), React.createElement(Input, {\n    type: \"text\",\n    name: \"last\",\n    id: \"last\",\n    onChange: onChange,\n    value: form.last === null ? '' : form.last,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  })), React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Email\"), React.createElement(Input, {\n    type: \"email\",\n    name: \"email\",\n    id: \"email\",\n    onChange: onChange,\n    value: form.email === null ? '' : form.email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  })), React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"phone\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Phone\"), React.createElement(Input, {\n    type: \"text\",\n    name: \"phone\",\n    id: \"phone\",\n    onChange: onChange,\n    value: form.phone === null ? '' : form.phone,\n    placeholder: \"ex. 555-555-5555\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  })), React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"location\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Location\"), React.createElement(Input, {\n    type: \"text\",\n    name: \"location\",\n    id: \"location\",\n    onChange: onChange,\n    value: form.location === null ? '' : form.location,\n    placeholder: \"City, State\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  })), React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"hobby\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"Hobby\"), React.createElement(Input, {\n    type: \"text\",\n    name: \"hobby\",\n    id: \"hobby\",\n    onChange: onChange,\n    value: form.hobby,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  })), React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Submit\"));\n}\n\nexport default AddEditForm;","map":{"version":3,"sources":["/Users/tkx/Desktop/backup2/frontend/src/Components/Forms/FormAddEdit.js"],"names":["React","useState","useEffect","Button","Form","FormGroup","Label","Input","AddEditForm","props","id","first","last","email","phone","location","hobby","form","setValues","onChange","e","target","name","value","submitFormAdd","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","json","item","Array","isArray","addItemToState","toggle","console","log","catch","err","submitFormEdit","updateState"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\n\nfunction AddEditForm(props) {\n  const[form, setValues] = useState({\n    id: 0,\n    first: '',\n    last: '',\n    email: '',\n    phone: '',\n    location: '',\n    hobby: ''\n  })\n\n  const onChange = e => {\n    setValues({\n      ...form,\n      [e.target.name]: e.target.value\n    })\n  }\n\n  const submitFormAdd = e => {\n    e.preventDefault()\n    fetch('http://localhost:3000/crud', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        first: form.first,\n        last: form.last,\n        email: form.email,\n        phone: form.phone,\n        location: form.location,\n        hobby: form.hobby\n      })\n    })\n      .then(response => response.json())\n      .then(item => {\n        if(Array.isArray(item)) {\n          props.addItemToState(item[0])\n          props.toggle()\n        } else {\n          console.log('failure')\n        }\n      })\n      .catch(err => console.log(err))\n  }\n\n  const submitFormEdit = e => {\n    e.preventDefault()\n    fetch('http://localhost:3000/crud', {\n      method: 'put',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id: form.id,\n        first: form.first,\n        last: form.last,\n        email: form.email,\n        phone: form.phone,\n        location: form.location,\n        hobby: form.hobby\n      })\n    })\n      .then(response => response.json())\n      .then(item => {\n        if(Array.isArray(item)) {\n          // console.log(item[0])\n          props.updateState(item[0])\n          props.toggle()\n        } else {\n          console.log('failure')\n        }\n      })\n      .catch(err => console.log(err))\n  }\n\n  useEffect(() => {\n    if(props.item){\n      const { id, first, last, email, phone, location, hobby } = props.item\n      setValues({ id, first, last, email, phone, location, hobby })\n    }\n  }, false)\n\n  return (\n    <Form onSubmit={props.item ? submitFormEdit : submitFormAdd}>\n      <FormGroup>\n        <Label for=\"first\">First Name</Label>\n        <Input type=\"text\" name=\"first\" id=\"first\" onChange={onChange} value={form.first === null ? '' : form.first} />\n      </FormGroup>\n      <FormGroup>\n        <Label for=\"last\">Last Name</Label>\n        <Input type=\"text\" name=\"last\" id=\"last\" onChange={onChange} value={form.last === null ? '' : form.last}  />\n      </FormGroup>\n      <FormGroup>\n        <Label for=\"email\">Email</Label>\n        <Input type=\"email\" name=\"email\" id=\"email\" onChange={onChange} value={form.email === null ? '' : form.email}  />\n      </FormGroup>\n      <FormGroup>\n        <Label for=\"phone\">Phone</Label>\n        <Input type=\"text\" name=\"phone\" id=\"phone\" onChange={onChange} value={form.phone === null ? '' : form.phone}  placeholder=\"ex. 555-555-5555\" />\n      </FormGroup>\n      <FormGroup>\n        <Label for=\"location\">Location</Label>\n        <Input type=\"text\" name=\"location\" id=\"location\" onChange={onChange} value={form.location === null ? '' : form.location}  placeholder=\"City, State\" />\n      </FormGroup>\n      <FormGroup>\n        <Label for=\"hobby\">Hobby</Label>\n        <Input type=\"text\" name=\"hobby\" id=\"hobby\" onChange={onChange} value={form.hobby}  />\n      </FormGroup>\n      <Button>Submit</Button>\n    </Form>\n  )\n}\n\nexport default AddEditForm"]},"metadata":{},"sourceType":"module"}