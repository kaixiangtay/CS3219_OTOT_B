{"ast":null,"code":"import _slicedToArray from \"/Users/tkx/Desktop/backup2/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tkx/Desktop/backup2/frontend/src/components/Modals/FoodModal.js\";\nimport React, { useState } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport FoodForm from '../Forms/FoodForm';\n\nfunction FoodModal(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modal = _useState2[0],\n      setModal = _useState2[1];\n\n  var toggle = function toggle() {\n    setModal(!modal);\n  };\n\n  var closeBtn = React.createElement(\"button\", {\n    className: \"close\",\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"\\xD7\"); // if (label === 'Edit') {\n  //   button = <Button\n  //     color=\"warning\"\n  //     onClick={toggle}\n  //     style={{ float: \"left\", marginRight: \"10px\" }}>{label}\n  //   </Button>\n  //   title = 'Edit Food'\n  // } else {\n  //   button = <Button\n  //     color=\"success\"\n  //     onClick={toggle}\n  //     style={{ float: \"left\", marginRight: \"10px\" }}>{label}\n  //   </Button>\n  //   title = 'Add New Food'\n  // }\n\n  var modifyFood = function modifyFood(buttonLabel) {\n    switch (buttonLabel) {\n      case \"Edit Food\":\n        return React.createElement(Button, {\n          color: \"warning\",\n          onClick: toggle,\n          style: {\n            float: \"left\",\n            marginRight: \"10%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, buttonLabel);\n\n      case \"Add Food\":\n        return React.createElement(Button, {\n          color: \"success\",\n          onClick: toggle,\n          style: {\n            float: \"left\",\n            marginRight: \"10%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, buttonLabel);\n\n      default:\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, modifyFood(props.buttonLabel), React.createElement(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(ModalHeader, {\n    toggle: toggle,\n    close: closeBtn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, props.buttonLabel), React.createElement(ModalBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(FoodForm, {\n    addFood: props.addFood,\n    updateFood: props.updateFood,\n    toggle: toggle,\n    item: props.item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }))));\n}\n\nexport default FoodModal;","map":{"version":3,"sources":["/Users/tkx/Desktop/backup2/frontend/src/components/Modals/FoodModal.js"],"names":["React","useState","Button","Modal","ModalHeader","ModalBody","FoodForm","FoodModal","props","modal","setModal","toggle","closeBtn","modifyFood","buttonLabel","float","marginRight","addFood","updateFood","item"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,WAAxB,EAAqCC,SAArC,QAAsD,YAAtD;AACA,OAAOC,QAAP,MAAqB,mBAArB;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA,kBACEP,QAAQ,CAAC,KAAD,CADV;AAAA;AAAA,MACjBQ,KADiB;AAAA,MACVC,QADU;;AAGxB,MAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACnBD,IAAAA,QAAQ,CAAC,CAACD,KAAF,CAAR;AACD,GAFD;;AAIA,MAAMG,QAAQ,GAAG;AAAQ,IAAA,SAAS,EAAC,OAAlB;AAA0B,IAAA,OAAO,EAAED,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAjB,CAPwB,CASxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAME,UAAU,GAAG,SAAbA,UAAa,CAACC,WAAD,EAAiB;AAClC,YAAQA,WAAR;AACE,WAAK,WAAL;AACE,eAAO,oBAAC,MAAD;AACL,UAAA,KAAK,EAAC,SADD;AAEL,UAAA,OAAO,EAAEH,MAFJ;AAGL,UAAA,KAAK,EAAE;AAAEI,YAAAA,KAAK,EAAE,MAAT;AAAiBC,YAAAA,WAAW,EAAE;AAA9B,WAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAG0CF,WAH1C,CAAP;;AAKF,WAAK,UAAL;AACE,eAAO,oBAAC,MAAD;AACL,UAAA,KAAK,EAAC,SADD;AAEL,UAAA,OAAO,EAAEH,MAFJ;AAGL,UAAA,KAAK,EAAE;AAAEI,YAAAA,KAAK,EAAE,MAAT;AAAiBC,YAAAA,WAAW,EAAE;AAA9B,WAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAG0CF,WAH1C,CAAP;;AAKF;AAbF;AAgBD,GAjBD;;AAoBA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,UAAU,CAACL,KAAK,CAACM,WAAP,CADb,EAEE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEL,KAAf;AAAsB,IAAA,MAAM,EAAEE,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAEA,MAArB;AAA6B,IAAA,KAAK,EAAEC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+CJ,KAAK,CAACM,WAArD,CADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,OAAO,EAAEN,KAAK,CAACS,OADjB;AAEE,IAAA,UAAU,EAAET,KAAK,CAACU,UAFpB;AAGE,IAAA,MAAM,EAAEP,MAHV;AAIE,IAAA,IAAI,EAAEH,KAAK,CAACW,IAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CAFF,CADF;AAeD;;AAED,eAAeZ,SAAf","sourcesContent":["import React, { useState } from 'react'\nimport { Button, Modal, ModalHeader, ModalBody } from 'reactstrap'\nimport FoodForm from '../Forms/FoodForm'\n\nfunction FoodModal(props) {\n  const [modal, setModal] = useState(false)\n\n  const toggle = () => {\n    setModal(!modal)\n  }\n\n  const closeBtn = <button className=\"close\" onClick={toggle}>&times;</button>\n\n  // if (label === 'Edit') {\n  //   button = <Button\n  //     color=\"warning\"\n  //     onClick={toggle}\n  //     style={{ float: \"left\", marginRight: \"10px\" }}>{label}\n  //   </Button>\n  //   title = 'Edit Food'\n  // } else {\n  //   button = <Button\n  //     color=\"success\"\n  //     onClick={toggle}\n  //     style={{ float: \"left\", marginRight: \"10px\" }}>{label}\n  //   </Button>\n  //   title = 'Add New Food'\n  // }\n\n  const modifyFood = (buttonLabel) => {\n    switch (buttonLabel) {\n      case \"Edit Food\":\n        return <Button\n          color=\"warning\"\n          onClick={toggle}\n          style={{ float: \"left\", marginRight: \"10%\" }}>{buttonLabel}\n        </Button>\n      case \"Add Food\":\n        return <Button\n          color=\"success\"\n          onClick={toggle}\n          style={{ float: \"left\", marginRight: \"10%\" }}>{buttonLabel}\n        </Button>\n      default:\n    }\n\n  }\n\n\n  return (\n    <div>\n      {modifyFood(props.buttonLabel)}\n      <Modal isOpen={modal} toggle={toggle}>\n        <ModalHeader toggle={toggle} close={closeBtn}>{props.buttonLabel}</ModalHeader>\n        <ModalBody>\n          <FoodForm\n            addFood={props.addFood}\n            updateFood={props.updateFood}\n            toggle={toggle}\n            item={props.item} />\n        </ModalBody>\n      </Modal>\n    </div>\n  )\n}\n\nexport default FoodModal"]},"metadata":{},"sourceType":"module"}